"""Add profile columns to User table

Revision ID: b0f0c393edce
Revises: 
Create Date: 2025-10-06 10:02:05.726803

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b0f0c393edce'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Post')
    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.add_column(sa.Column('icon_path', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('header_path', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('introduction', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('tags', sa.String(length=255), nullable=True))
        batch_op.alter_column('student_id',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('password_hash',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('school_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('last_login',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_constraint(batch_op.f('User_department_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('User_school_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'department', ['department_id'], ['department_id'])
        batch_op.create_foreign_key(None, 'school', ['school_id'], ['school_id'])

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('comment_user_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('comment_post_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'User', ['user_id'], ['user_id'])
        batch_op.create_foreign_key(None, 'post', ['post_id'], ['post_id'])
        batch_op.drop_column('updated_at')

    with op.batch_alter_table('department', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('department_school_id_fkey'), type_='foreignkey')

    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.alter_column('scope',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('post_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'User', ['user_id'], ['user_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('post', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('post_user_id_fkey'), 'User', ['user_id'], ['user_id'], ondelete='CASCADE')
        batch_op.alter_column('scope',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)

    with op.batch_alter_table('department', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('department_school_id_fkey'), 'school', ['school_id'], ['school_id'], ondelete='CASCADE')

    with op.batch_alter_table('comment', schema=None) as batch_op:
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('comment_post_id_fkey'), 'post', ['post_id'], ['post_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('comment_user_id_fkey'), 'User', ['user_id'], ['user_id'], ondelete='CASCADE')

    with op.batch_alter_table('User', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('User_school_id_fkey'), 'school', ['school_id'], ['school_id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('User_department_id_fkey'), 'department', ['department_id'], ['department_id'], ondelete='CASCADE')
        batch_op.alter_column('last_login',
               existing_type=sa.DateTime(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('school_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               existing_nullable=False)
        batch_op.alter_column('student_id',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
        batch_op.drop_column('tags')
        batch_op.drop_column('introduction')
        batch_op.drop_column('header_path')
        batch_op.drop_column('icon_path')

    op.create_table('Post',
    sa.Column('post_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('scope', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], name=op.f('Post_user_id_fkey')),
    sa.PrimaryKeyConstraint('post_id', name=op.f('Post_pkey'))
    )
    # ### end Alembic commands ###